language: csharp
dotnet: 1.0.0-preview2-1-003177
addons:
  apt:
    packages:
    - gettext
    - libcurl4-openssl-dev
    - libicu-dev
    - libssl-dev
    - libunwind8
    - zlib1g

matrix:
  include:
    - os: linux
      mono: none
      dist: trusty
      sudo: required
      env: CONFIGURATION=Release
    - os: osx
      mono: none
      osx_image: xcode8
      env: CONFIGURATION=Release

install:
  # Display dotnet version info 
  - which dotnet;
    if [ $? -eq 0 ]; then
      echo "Using dotnet:";
      dotnet --info;
    else
      echo "dotnet.exe not found"
      exit 1;
    fi

  - if test "$TRAVIS_OS_NAME" == "linux"; then nvm install stable && nvm use stable; fi
  - if test "$TRAVIS_OS_NAME" == "osx"; then brew update; brew install openssl; ln -s /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib /usr/local/lib/; ln -s /usr/local/opt/openssl/lib/libssl.1.0.0.dylib /usr/local/lib/; fiopenssl; ulimit -S -n 8192;fi

  - node -e "jsonPath='./src/NetUV.Core/project.json';data=require(jsonPath);fs=require('fs');delete data.frameworks.net46;fs.writeFileSync(jsonPath, JSON.stringify(data, null, 2))"
  - node -e "jsonPath='./test/NetUV.Tests/project.json';data=require(jsonPath);fs=require('fs');delete data.frameworks.net461;fs.writeFileSync(jsonPath, JSON.stringify(data, null, 2))"
  - node -e "jsonPath='./test/NetUV.Tests.Performance/project.json';data=require(jsonPath);fs=require('fs');delete data.frameworks.net461;fs.writeFileSync(jsonPath, JSON.stringify(data, null, 2))"
  
before_script: 
 - chmod a+x ./build.sh
 
script:
  - ./build.sh